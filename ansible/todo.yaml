in ansible:
  - create ansible user
  - create jenkins user
  - add ansible user to jenkins group
  - create folders "home/jenkins/todo/back" and "home/jenkins/todo/front"
  - chmod +rw "~/todo/"

common:
  1: Create instance
  2: add them dns-name to inventory

______________________________________________________________________________:

prepare ec2:
  prepare jenkins server:
    1: install jenkins
    2: install node (for build frontend app)
    3: copy jenkins data (jenkins home)
    4: generate ssh pair. And send publick key to ansible server
    5: ssh-keyscan ansiblehost >> known_host
  prepare db: 
    1: install mysql
    2: send sql script(add user, add db)
    3: run sql script
    4: start server
  prepare web_server:
    1: install app (docker)
    3: get docker-compose files and etc....(another jenkins job?)
    4: run frontend jenkins job
      4.1: in ansible host create .env file with nginx dns name(from inventory)
      4.2: send his to jenkins server
      4.3: run job (one step of job(after clone) - cp .env to repo folder)
    5: run backend jenkins job
      5.1: in ansible host create .dev.env file with db address from inventory
      5.2: send his to jenkins server
      5.3: run job (one step of job(after clone) - cp .dev.env to repo folder)
  prepare nginx: 
    1: install app
    2: unlink gefault site
    3: create backup of nginx config
    4: copy config for my site
    5: ln -s to sites-avaliable
    6: restart nginx

zip -r example.zip original_folder

roles: 
  1: createIns_ec2        -
  2: getInsIp_ec2         -
  3: installJenkins       -
  4: lb                   -
  5: sendBack             +
  6: updateDockerData     +
  7: sendFront            +
  8: webserver            +
  9: startApp             +
  10: db                  +
  11: restartApp          -



backupname=$(date +"%d_%m_%Y_%T");
zip -r ./"$backupname" *
aws s3 cp “./latest.zip” s3://studentota2lvl-jenkins-data/;


 ansible-vault edit pass.yml --vault-password-file pass.vault 


export AWS_ACCESS_KEY_ID=AKIAJ7KKPII5DKMJI2ZA;
export AWS_SECRET_ACCESS_KEY=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;
export AWS_DEFAULT_REGION=eu-central-1;
aws s3 cp "./latest.backup" "s3://studentota2lvl-jenkins-data";

ec2_access_key: AKIAJ7KKPII5DKMJI2ZA
ec2_secret_key: 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
mysql_app_user_pass: nodeUser!
mysql_root_password: rootUser!
login_password: root


SHOW DATABASES;
select user, host from mysql.user;

cp -r /media/sf_ansible_shared/* ~/ && sudo chmod -x ./group_vars/*
ansible-playbook -i hosts site.yml -t instWeb


cp -r /media/sf_ansible_shared/* /home/ansible && sudo chmod -x /home/ansible/group_vars/* && cp /home/ansible/ssh_keys/my_aws /home/ansible/.ssh/ansible_to_aws_key && chmod 600 /home/ansible/.ssh/ansible_to_aws_key && chown -R ansible:ansible /home/ansible/








forIamUser: 
  ec2_access_key: AKIA5BZQYGZCX552B2VT
  ec2_secret_key: 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





Data from pass.yml
ec2_access_key: AKIAJ7KKPII5DKMJI2ZA
ec2_secret_key: 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
mysql_app_user_pass: nodeUser!
mysql_root_password: rootUser!
login_password: root
